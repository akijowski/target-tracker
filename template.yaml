AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Target Tracker

  It's crazy tough to get baby formula right now.
  Let's automate checking Target for product.

Parameters:
  BucketPrefix:
    Type: String
    Description: The prefix for the created S3 bucket
    Default: kijowski

Globals:
  Function:
    Runtime: go1.x
    Architectures:
      - x86_64
    Timeout: 5
    Tracing: Active
    AutoPublishAlias: Live
    Tags:
      Project: !Ref 'AWS::StackName'

Resources:
  TargetTrackerStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub '${AWS::StackName}'
      DefinitionUri: statemachine/target-tracker.asl.json
      DefinitionSubstitutions:
        AlertTopicArn: !Ref ProductAlertTopic
        MessageFormatterFunction: !Ref MessageFormatterFunction
        ProductCheckerFunction: !Ref ProductCheckerFunction
        HistoricalStatsFunction: !Ref HistoricalStatsFunction
        ResultsTableName: !Ref ResultsTable
      Events:
        HourlySchedule:
          Type: Schedule
          Properties:
            Enabled: true
            Name: !Sub '${AWS::StackName}-HourlyQuery'
            Description: Trigger the Target Tracker state machine every hour
            Schedule: "rate(1 hour)"
            Input: |
              {
                "products": [
                  {
                    "name": "Up&Up Gentle Baby Formula",
                    "tcin": "70000042",
                    "desired_quantity": 1,
                    "product_url": "https://www.target.com/p/gentle-non-gmo-powder-infant-formula-up-up/-/A-82052064"
                  },
                  {
                    "name": "Up&Up Baby Formula",
                    "tcin": "70000044",
                    "desired_quantity": 1,
                    "product_url": "https://www.target.com/p/powder-infant-formula-up-up/-/A-82052061"
                  },
                  {
                    "name": "Up&Up Advantage Baby Formula",
                    "tcin": "70000043",
                    "desired_quantity": 1,
                    "product_url": "https://www.target.com/p/advantage-powder-infant-formula-up-up/-/A-82052069"
                  },
                  {
                    "name": "Up&Up Sensitive Baby Formula",
                    "tcin": "70000046",
                    "desired_quantity": 1,
                    "product_url": "https://www.target.com/p/sensitivity-non-gmo-powder-infant-formula-up-up/-/A-82052068"
                  },
                  {
                    "name": "Enfamil NeuroPro Gentlease",
                    "tcin": "79334027",
                    "desired_quantity": 1,
                    "product_url": "https://www.target.com/p/enfamil-neuropro-gentlease-non-gmo-powder-infant-formula/-/A-81640508"
                  }
                ]
              }
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref ProductCheckerFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref MessageFormatterFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref HistoricalStatsFunction
        - DynamoDBWritePolicy:
            TableName: !Ref ResultsTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ProductAlertTopic.TopicName
      Tracing:
        Enabled: true
      Type: EXPRESS
      Tags:
        Project: !Ref 'AWS::StackName'
  TargetTrackerErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub '${AWS::StackName}-Errors'
      AlarmDescription: !Sub 'Step Function errors for ${AWS::StackName}'
      AlarmActions:
        - !Ref ErrorAlertTopic
      Namespace: AWS/States
      MetricName: ExecutionsFailed
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref TargetTrackerStateMachine
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 2
      Period: 3600 #1 hour
      Threshold: 0
      Statistic: Maximum

  ProductCheckerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-product-checker'
      Description: Query the Target API for product availability
      CodeUri: functions/productChecker/
      Handler: productChecker
      Environment:
        Variables:
          API_URI: 'https://redsky.target.com'
  ProductCheckerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${AWS::StackName}-product-checker'
      RetentionInDays: 7
      Tags:
      - Key: Project
        Value: !Ref 'AWS::StackName'

  MessageFormatterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-message-formatter'
      Description: Format a message about product availability to be sent out to SNS
      CodeUri: functions/messageFormatter/
      Handler: messageFormatter
  MessageFormatterLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${AWS::StackName}-message-formatter'
      RetentionInDays: 7
      Tags:
      - Key: Project
        Value: !Ref 'AWS::StackName'

  HistoricalStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-historical-stats'
      Description: Save historical data to an S3 bucket
      CodeUri: functions/historicalStats/
      Handler: historicalStats
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref HistoricalStatsBucket
      Environment:
        Variables:
          S3_URI_OVERRIDE: ""
          STATS_BUCKET_NAME: !Ref HistoricalStatsBucket
  HistoricalStatsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${AWS::StackName}-historical-stats'
      RetentionInDays: 7
      Tags:
      - Key: Project
        Value: !Ref 'AWS::StackName'

  ResultsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-results'
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
      Tags:
        - Key: Project
          Value: !Ref 'AWS::StackName'

  ProductAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Target Product Available
      TopicName: !Sub '${AWS::StackName}-product-alert'
      Subscription:
        - Endpoint: '{{resolve:ssm:TargetTrackerEmail1:1}}'
          Protocol: email
        - Endpoint: '{{resolve:ssm:TargetTrackerEmail2:1}}'
          Protocol: email
      Tags:
        - Key: Project
          Value: !Ref 'AWS::StackName'
  ErrorAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Target Tracker Errors
      TopicName: !Sub '${AWS::StackName}-errors'
      Subscription:
        - Endpoint: '{{resolve:ssm:TargetTrackerEmail1:1}}'
          Protocol: email
      Tags:
        - Key: Project
          Value: !Ref 'AWS::StackName'
  # https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/US_SetupSNS.html
  ErrorAlertTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref ErrorAlertTopic
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
            - 'SNS:Publish'
            Effect: Allow
            Principal:
              Service: 'cloudwatch.amazonaws.com'
            Resource: !Ref ErrorAlertTopic
            Condition:
              ArnLike:
                'aws:SourceArn': !Sub 'arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:*'
              StringEquals:
                'aws:SourceAccount': !Ref 'AWS::AccountId'

  HistoricalStatsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${BucketPrefix}-${AWS::StackName}-historical-stats'
      Tags:
        - Key: Project
          Value: !Ref 'AWS::StackName'
  HistoricalStatsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref HistoricalStatsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
            - 's3:GetObject'
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt HistoricalStatsOAI.S3CanonicalUserId
            Resource: !Sub '${HistoricalStatsBucket.Arn}/*'

  HistoricalStatsOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub 'Access to ${HistoricalStatsBucket}'
  HistoricalStatsCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties:
      CachePolicyConfig:
        Comment: !Sub 'Cache policy for ${HistoricalStatsBucket}'
        DefaultTTL: 3600
        MaxTTL: 3600
        MinTTL: 1800
        Name: !Ref HistoricalStatsBucket
        ParametersInCacheKeyAndForwardedToOrigin:
          CookiesConfig:
            CookieBehavior: none
          EnableAcceptEncodingGzip: true
          EnableAcceptEncodingBrotli: true
          HeadersConfig:
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: none
  HistoricalStatsDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: !Sub 'Distribution for ${HistoricalStatsBucket} S3 Bucket'
        DefaultRootObject: ""
        HttpVersion: http2
        PriceClass: PriceClass_100
        DefaultCacheBehavior:
          TargetOriginId: HistoricalStatsBucket
          ViewerProtocolPolicy: https-only
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          CachePolicyId: !Ref HistoricalStatsCachePolicy
          Compress: true
          # https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-response-headers-policies.html
          ResponseHeadersPolicyId: 5cc3b908-e619-4b99-88e5-2cf7f45965bd
        Origins:
          - S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${HistoricalStatsOAI}'
            DomainName: !GetAtt HistoricalStatsBucket.DomainName
            Id: HistoricalStatsBucket
      Tags:
        - Key: Project
          Value: !Ref 'AWS::StackName'

Outputs:
  TargetTrackerStateMachineArn:
    Description: "Target Tracker State Machine ARN"
    Value: !Ref TargetTrackerStateMachine
  ProductCheckerFunctionArn:
    Description: "Product Checker Lambda Function ARN"
    Value: !GetAtt ProductCheckerFunction.Arn
  MessageFormatterFunctionArn:
    Description: "Message Formatter Lambda Function ARN"
    Value: !GetAtt MessageFormatterFunction.Arn
  ProductAlertTopicArn:
    Description: "Product Alert SNS Topic ARN"
    Value: !Ref ProductAlertTopic
  ResultsTableArn:
    Description: "Results Table ARN"
    Value: !GetAtt ResultsTable.Arn
  HistoricalStatsBucket:
    Description: "S3 Bucket for historical data"
    Value: !Ref HistoricalStatsBucket
  HistoricalStatsDistribution:
    Description: "CloudFront distribution for historical data"
    Value: !Sub 'https://${HistoricalStatsDistribution.DomainName}'
